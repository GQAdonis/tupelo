// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nodestore.proto

package nodestore

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Cid struct {
	Bytes                []byte   `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cid) Reset()         { *m = Cid{} }
func (m *Cid) String() string { return proto.CompactTextString(m) }
func (*Cid) ProtoMessage()    {}
func (*Cid) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodestore_dceb6a2ae22fc49f, []int{0}
}
func (m *Cid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cid.Unmarshal(m, b)
}
func (m *Cid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cid.Marshal(b, m, deterministic)
}
func (dst *Cid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cid.Merge(dst, src)
}
func (m *Cid) XXX_Size() int {
	return xxx_messageInfo_Cid.Size(m)
}
func (m *Cid) XXX_DiscardUnknown() {
	xxx_messageInfo_Cid.DiscardUnknown(m)
}

var xxx_messageInfo_Cid proto.InternalMessageInfo

func (m *Cid) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

type Node struct {
	Bytes                []byte   `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodestore_dceb6a2ae22fc49f, []int{1}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

type Session struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodestore_dceb6a2ae22fc49f, []int{2}
}
func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (dst *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(dst, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Config struct {
	// Types that are valid to be assigned to Config:
	//	*Config_Badger
	//	*Config_Ipld
	//	*Config_Memory
	Config               isConfig_Config `protobuf_oneof:"config"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodestore_dceb6a2ae22fc49f, []int{3}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

type isConfig_Config interface {
	isConfig_Config()
}

type Config_Badger struct {
	Badger *ConfigForBadger `protobuf:"bytes,1,opt,name=badger,proto3,oneof"`
}

type Config_Ipld struct {
	Ipld *ConfigForIpld `protobuf:"bytes,2,opt,name=ipld,proto3,oneof"`
}

type Config_Memory struct {
	Memory *ConfigForMemory `protobuf:"bytes,3,opt,name=memory,proto3,oneof"`
}

func (*Config_Badger) isConfig_Config() {}

func (*Config_Ipld) isConfig_Config() {}

func (*Config_Memory) isConfig_Config() {}

func (m *Config) GetConfig() isConfig_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Config) GetBadger() *ConfigForBadger {
	if x, ok := m.GetConfig().(*Config_Badger); ok {
		return x.Badger
	}
	return nil
}

func (m *Config) GetIpld() *ConfigForIpld {
	if x, ok := m.GetConfig().(*Config_Ipld); ok {
		return x.Ipld
	}
	return nil
}

func (m *Config) GetMemory() *ConfigForMemory {
	if x, ok := m.GetConfig().(*Config_Memory); ok {
		return x.Memory
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Config) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Config_OneofMarshaler, _Config_OneofUnmarshaler, _Config_OneofSizer, []interface{}{
		(*Config_Badger)(nil),
		(*Config_Ipld)(nil),
		(*Config_Memory)(nil),
	}
}

func _Config_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Config)
	// config
	switch x := m.Config.(type) {
	case *Config_Badger:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Badger); err != nil {
			return err
		}
	case *Config_Ipld:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ipld); err != nil {
			return err
		}
	case *Config_Memory:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Memory); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Config.Config has unexpected type %T", x)
	}
	return nil
}

func _Config_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Config)
	switch tag {
	case 1: // config.badger
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConfigForBadger)
		err := b.DecodeMessage(msg)
		m.Config = &Config_Badger{msg}
		return true, err
	case 2: // config.ipld
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConfigForIpld)
		err := b.DecodeMessage(msg)
		m.Config = &Config_Ipld{msg}
		return true, err
	case 3: // config.memory
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConfigForMemory)
		err := b.DecodeMessage(msg)
		m.Config = &Config_Memory{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Config_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Config)
	// config
	switch x := m.Config.(type) {
	case *Config_Badger:
		s := proto.Size(x.Badger)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Config_Ipld:
		s := proto.Size(x.Ipld)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Config_Memory:
		s := proto.Size(x.Memory)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ConfigForBadger struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigForBadger) Reset()         { *m = ConfigForBadger{} }
func (m *ConfigForBadger) String() string { return proto.CompactTextString(m) }
func (*ConfigForBadger) ProtoMessage()    {}
func (*ConfigForBadger) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodestore_dceb6a2ae22fc49f, []int{4}
}
func (m *ConfigForBadger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigForBadger.Unmarshal(m, b)
}
func (m *ConfigForBadger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigForBadger.Marshal(b, m, deterministic)
}
func (dst *ConfigForBadger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigForBadger.Merge(dst, src)
}
func (m *ConfigForBadger) XXX_Size() int {
	return xxx_messageInfo_ConfigForBadger.Size(m)
}
func (m *ConfigForBadger) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigForBadger.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigForBadger proto.InternalMessageInfo

func (m *ConfigForBadger) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type ConfigForIpld struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Offline              bool     `protobuf:"varint,3,opt,name=offline,proto3" json:"offline,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigForIpld) Reset()         { *m = ConfigForIpld{} }
func (m *ConfigForIpld) String() string { return proto.CompactTextString(m) }
func (*ConfigForIpld) ProtoMessage()    {}
func (*ConfigForIpld) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodestore_dceb6a2ae22fc49f, []int{5}
}
func (m *ConfigForIpld) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigForIpld.Unmarshal(m, b)
}
func (m *ConfigForIpld) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigForIpld.Marshal(b, m, deterministic)
}
func (dst *ConfigForIpld) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigForIpld.Merge(dst, src)
}
func (m *ConfigForIpld) XXX_Size() int {
	return xxx_messageInfo_ConfigForIpld.Size(m)
}
func (m *ConfigForIpld) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigForIpld.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigForIpld proto.InternalMessageInfo

func (m *ConfigForIpld) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ConfigForIpld) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ConfigForIpld) GetOffline() bool {
	if m != nil {
		return m.Offline
	}
	return false
}

type ConfigForMemory struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigForMemory) Reset()         { *m = ConfigForMemory{} }
func (m *ConfigForMemory) String() string { return proto.CompactTextString(m) }
func (*ConfigForMemory) ProtoMessage()    {}
func (*ConfigForMemory) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodestore_dceb6a2ae22fc49f, []int{6}
}
func (m *ConfigForMemory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigForMemory.Unmarshal(m, b)
}
func (m *ConfigForMemory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigForMemory.Marshal(b, m, deterministic)
}
func (dst *ConfigForMemory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigForMemory.Merge(dst, src)
}
func (m *ConfigForMemory) XXX_Size() int {
	return xxx_messageInfo_ConfigForMemory.Size(m)
}
func (m *ConfigForMemory) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigForMemory.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigForMemory proto.InternalMessageInfo

func (m *ConfigForMemory) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type GetRequest struct {
	Session              *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Cid                  *Cid     `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodestore_dceb6a2ae22fc49f, []int{7}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *GetRequest) GetCid() *Cid {
	if m != nil {
		return m.Cid
	}
	return nil
}

type GetResponse struct {
	Node                 *Node    `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodestore_dceb6a2ae22fc49f, []int{8}
}
func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (dst *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(dst, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type PutRequest struct {
	Session              *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Node                 *Node    `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutRequest) Reset()         { *m = PutRequest{} }
func (m *PutRequest) String() string { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()    {}
func (*PutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodestore_dceb6a2ae22fc49f, []int{9}
}
func (m *PutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRequest.Unmarshal(m, b)
}
func (m *PutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRequest.Marshal(b, m, deterministic)
}
func (dst *PutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRequest.Merge(dst, src)
}
func (m *PutRequest) XXX_Size() int {
	return xxx_messageInfo_PutRequest.Size(m)
}
func (m *PutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutRequest proto.InternalMessageInfo

func (m *PutRequest) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *PutRequest) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type PutResponse struct {
	Cid                  *Cid     `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutResponse) Reset()         { *m = PutResponse{} }
func (m *PutResponse) String() string { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()    {}
func (*PutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodestore_dceb6a2ae22fc49f, []int{10}
}
func (m *PutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutResponse.Unmarshal(m, b)
}
func (m *PutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutResponse.Marshal(b, m, deterministic)
}
func (dst *PutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutResponse.Merge(dst, src)
}
func (m *PutResponse) XXX_Size() int {
	return xxx_messageInfo_PutResponse.Size(m)
}
func (m *PutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutResponse proto.InternalMessageInfo

func (m *PutResponse) GetCid() *Cid {
	if m != nil {
		return m.Cid
	}
	return nil
}

type DeleteRequest struct {
	Session              *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Cid                  *Cid     `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodestore_dceb6a2ae22fc49f, []int{11}
}
func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(dst, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *DeleteRequest) GetCid() *Cid {
	if m != nil {
		return m.Cid
	}
	return nil
}

type ConfirmationResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmationResponse) Reset()         { *m = ConfirmationResponse{} }
func (m *ConfirmationResponse) String() string { return proto.CompactTextString(m) }
func (*ConfirmationResponse) ProtoMessage()    {}
func (*ConfirmationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodestore_dceb6a2ae22fc49f, []int{12}
}
func (m *ConfirmationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmationResponse.Unmarshal(m, b)
}
func (m *ConfirmationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmationResponse.Marshal(b, m, deterministic)
}
func (dst *ConfirmationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmationResponse.Merge(dst, src)
}
func (m *ConfirmationResponse) XXX_Size() int {
	return xxx_messageInfo_ConfirmationResponse.Size(m)
}
func (m *ConfirmationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmationResponse proto.InternalMessageInfo

func (m *ConfirmationResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type CloseRequest struct {
	Session              *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseRequest) Reset()         { *m = CloseRequest{} }
func (m *CloseRequest) String() string { return proto.CompactTextString(m) }
func (*CloseRequest) ProtoMessage()    {}
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodestore_dceb6a2ae22fc49f, []int{13}
}
func (m *CloseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRequest.Unmarshal(m, b)
}
func (m *CloseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRequest.Marshal(b, m, deterministic)
}
func (dst *CloseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRequest.Merge(dst, src)
}
func (m *CloseRequest) XXX_Size() int {
	return xxx_messageInfo_CloseRequest.Size(m)
}
func (m *CloseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRequest proto.InternalMessageInfo

func (m *CloseRequest) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

type OpenRequest struct {
	// Types that are valid to be assigned to Config:
	//	*OpenRequest_Badger
	//	*OpenRequest_Ipld
	//	*OpenRequest_Memory
	Config               isOpenRequest_Config `protobuf_oneof:"config"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OpenRequest) Reset()         { *m = OpenRequest{} }
func (m *OpenRequest) String() string { return proto.CompactTextString(m) }
func (*OpenRequest) ProtoMessage()    {}
func (*OpenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodestore_dceb6a2ae22fc49f, []int{14}
}
func (m *OpenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenRequest.Unmarshal(m, b)
}
func (m *OpenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenRequest.Marshal(b, m, deterministic)
}
func (dst *OpenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenRequest.Merge(dst, src)
}
func (m *OpenRequest) XXX_Size() int {
	return xxx_messageInfo_OpenRequest.Size(m)
}
func (m *OpenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenRequest proto.InternalMessageInfo

type isOpenRequest_Config interface {
	isOpenRequest_Config()
}

type OpenRequest_Badger struct {
	Badger *ConfigForBadger `protobuf:"bytes,1,opt,name=badger,proto3,oneof"`
}

type OpenRequest_Ipld struct {
	Ipld *ConfigForIpld `protobuf:"bytes,2,opt,name=ipld,proto3,oneof"`
}

type OpenRequest_Memory struct {
	Memory *ConfigForMemory `protobuf:"bytes,3,opt,name=memory,proto3,oneof"`
}

func (*OpenRequest_Badger) isOpenRequest_Config() {}

func (*OpenRequest_Ipld) isOpenRequest_Config() {}

func (*OpenRequest_Memory) isOpenRequest_Config() {}

func (m *OpenRequest) GetConfig() isOpenRequest_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *OpenRequest) GetBadger() *ConfigForBadger {
	if x, ok := m.GetConfig().(*OpenRequest_Badger); ok {
		return x.Badger
	}
	return nil
}

func (m *OpenRequest) GetIpld() *ConfigForIpld {
	if x, ok := m.GetConfig().(*OpenRequest_Ipld); ok {
		return x.Ipld
	}
	return nil
}

func (m *OpenRequest) GetMemory() *ConfigForMemory {
	if x, ok := m.GetConfig().(*OpenRequest_Memory); ok {
		return x.Memory
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*OpenRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _OpenRequest_OneofMarshaler, _OpenRequest_OneofUnmarshaler, _OpenRequest_OneofSizer, []interface{}{
		(*OpenRequest_Badger)(nil),
		(*OpenRequest_Ipld)(nil),
		(*OpenRequest_Memory)(nil),
	}
}

func _OpenRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*OpenRequest)
	// config
	switch x := m.Config.(type) {
	case *OpenRequest_Badger:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Badger); err != nil {
			return err
		}
	case *OpenRequest_Ipld:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ipld); err != nil {
			return err
		}
	case *OpenRequest_Memory:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Memory); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("OpenRequest.Config has unexpected type %T", x)
	}
	return nil
}

func _OpenRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*OpenRequest)
	switch tag {
	case 1: // config.badger
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConfigForBadger)
		err := b.DecodeMessage(msg)
		m.Config = &OpenRequest_Badger{msg}
		return true, err
	case 2: // config.ipld
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConfigForIpld)
		err := b.DecodeMessage(msg)
		m.Config = &OpenRequest_Ipld{msg}
		return true, err
	case 3: // config.memory
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConfigForMemory)
		err := b.DecodeMessage(msg)
		m.Config = &OpenRequest_Memory{msg}
		return true, err
	default:
		return false, nil
	}
}

func _OpenRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*OpenRequest)
	// config
	switch x := m.Config.(type) {
	case *OpenRequest_Badger:
		s := proto.Size(x.Badger)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OpenRequest_Ipld:
		s := proto.Size(x.Ipld)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OpenRequest_Memory:
		s := proto.Size(x.Memory)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CloseAllRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseAllRequest) Reset()         { *m = CloseAllRequest{} }
func (m *CloseAllRequest) String() string { return proto.CompactTextString(m) }
func (*CloseAllRequest) ProtoMessage()    {}
func (*CloseAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodestore_dceb6a2ae22fc49f, []int{15}
}
func (m *CloseAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseAllRequest.Unmarshal(m, b)
}
func (m *CloseAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseAllRequest.Marshal(b, m, deterministic)
}
func (dst *CloseAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseAllRequest.Merge(dst, src)
}
func (m *CloseAllRequest) XXX_Size() int {
	return xxx_messageInfo_CloseAllRequest.Size(m)
}
func (m *CloseAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseAllRequest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Cid)(nil), "nodestore.Cid")
	proto.RegisterType((*Node)(nil), "nodestore.Node")
	proto.RegisterType((*Session)(nil), "nodestore.Session")
	proto.RegisterType((*Config)(nil), "nodestore.Config")
	proto.RegisterType((*ConfigForBadger)(nil), "nodestore.ConfigForBadger")
	proto.RegisterType((*ConfigForIpld)(nil), "nodestore.ConfigForIpld")
	proto.RegisterType((*ConfigForMemory)(nil), "nodestore.ConfigForMemory")
	proto.RegisterType((*GetRequest)(nil), "nodestore.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "nodestore.GetResponse")
	proto.RegisterType((*PutRequest)(nil), "nodestore.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "nodestore.PutResponse")
	proto.RegisterType((*DeleteRequest)(nil), "nodestore.DeleteRequest")
	proto.RegisterType((*ConfirmationResponse)(nil), "nodestore.ConfirmationResponse")
	proto.RegisterType((*CloseRequest)(nil), "nodestore.CloseRequest")
	proto.RegisterType((*OpenRequest)(nil), "nodestore.OpenRequest")
	proto.RegisterType((*CloseAllRequest)(nil), "nodestore.CloseAllRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodestoreServiceClient is the client API for NodestoreService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodestoreServiceClient interface {
	Open(ctx context.Context, in *OpenRequest, opts ...grpc.CallOption) (*Session, error)
	Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*ConfirmationResponse, error)
	CloseAll(ctx context.Context, in *CloseAllRequest, opts ...grpc.CallOption) (*ConfirmationResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*ConfirmationResponse, error)
}

type nodestoreServiceClient struct {
	cc *grpc.ClientConn
}

func NewNodestoreServiceClient(cc *grpc.ClientConn) NodestoreServiceClient {
	return &nodestoreServiceClient{cc}
}

func (c *nodestoreServiceClient) Open(ctx context.Context, in *OpenRequest, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := c.cc.Invoke(ctx, "/nodestore.NodestoreService/Open", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodestoreServiceClient) Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*ConfirmationResponse, error) {
	out := new(ConfirmationResponse)
	err := c.cc.Invoke(ctx, "/nodestore.NodestoreService/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodestoreServiceClient) CloseAll(ctx context.Context, in *CloseAllRequest, opts ...grpc.CallOption) (*ConfirmationResponse, error) {
	out := new(ConfirmationResponse)
	err := c.cc.Invoke(ctx, "/nodestore.NodestoreService/CloseAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodestoreServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/nodestore.NodestoreService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodestoreServiceClient) Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	out := new(PutResponse)
	err := c.cc.Invoke(ctx, "/nodestore.NodestoreService/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodestoreServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*ConfirmationResponse, error) {
	out := new(ConfirmationResponse)
	err := c.cc.Invoke(ctx, "/nodestore.NodestoreService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodestoreServiceServer is the server API for NodestoreService service.
type NodestoreServiceServer interface {
	Open(context.Context, *OpenRequest) (*Session, error)
	Close(context.Context, *CloseRequest) (*ConfirmationResponse, error)
	CloseAll(context.Context, *CloseAllRequest) (*ConfirmationResponse, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Put(context.Context, *PutRequest) (*PutResponse, error)
	Delete(context.Context, *DeleteRequest) (*ConfirmationResponse, error)
}

func RegisterNodestoreServiceServer(s *grpc.Server, srv NodestoreServiceServer) {
	s.RegisterService(&_NodestoreService_serviceDesc, srv)
}

func _NodestoreService_Open_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodestoreServiceServer).Open(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodestore.NodestoreService/Open",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodestoreServiceServer).Open(ctx, req.(*OpenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodestoreService_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodestoreServiceServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodestore.NodestoreService/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodestoreServiceServer).Close(ctx, req.(*CloseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodestoreService_CloseAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodestoreServiceServer).CloseAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodestore.NodestoreService/CloseAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodestoreServiceServer).CloseAll(ctx, req.(*CloseAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodestoreService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodestoreServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodestore.NodestoreService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodestoreServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodestoreService_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodestoreServiceServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodestore.NodestoreService/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodestoreServiceServer).Put(ctx, req.(*PutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodestoreService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodestoreServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodestore.NodestoreService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodestoreServiceServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodestoreService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nodestore.NodestoreService",
	HandlerType: (*NodestoreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Open",
			Handler:    _NodestoreService_Open_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _NodestoreService_Close_Handler,
		},
		{
			MethodName: "CloseAll",
			Handler:    _NodestoreService_CloseAll_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _NodestoreService_Get_Handler,
		},
		{
			MethodName: "Put",
			Handler:    _NodestoreService_Put_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _NodestoreService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nodestore.proto",
}

func init() { proto.RegisterFile("nodestore.proto", fileDescriptor_nodestore_dceb6a2ae22fc49f) }

var fileDescriptor_nodestore_dceb6a2ae22fc49f = []byte{
	// 539 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x55, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0x93, 0x34, 0x1f, 0x93, 0xb6, 0x81, 0x51, 0x29, 0x26, 0x54, 0xa2, 0x5a, 0x84, 0xc4,
	0x01, 0xa5, 0x28, 0xf4, 0xc8, 0xa5, 0x09, 0x22, 0xe5, 0x40, 0xa9, 0xb6, 0x07, 0x24, 0x84, 0x54,
	0x39, 0xde, 0x49, 0x59, 0xc9, 0xf1, 0x1a, 0xaf, 0x83, 0xd4, 0x33, 0xff, 0x87, 0x0b, 0x7f, 0x10,
	0x79, 0xbd, 0xc6, 0x9b, 0x28, 0xa1, 0x52, 0x25, 0x0e, 0xbd, 0x79, 0x77, 0xde, 0xbc, 0xf7, 0xe6,
	0x63, 0x65, 0xe8, 0xc5, 0x4a, 0x90, 0xce, 0x54, 0x4a, 0x83, 0x24, 0x55, 0x99, 0xc2, 0xce, 0xdf,
	0x0b, 0xf6, 0x14, 0xea, 0x63, 0x29, 0x70, 0x1f, 0xb6, 0xa7, 0x37, 0x19, 0x69, 0xdf, 0x3b, 0xf2,
	0x5e, 0xee, 0xf0, 0xe2, 0xc0, 0x0e, 0xa1, 0x71, 0xae, 0x04, 0x6d, 0x88, 0x3e, 0x81, 0xd6, 0x25,
	0x69, 0x2d, 0x55, 0x8c, 0x7b, 0x50, 0x93, 0xc2, 0x44, 0x3b, 0xbc, 0x26, 0x05, 0xfb, 0xe5, 0x41,
	0x73, 0xac, 0xe2, 0x99, 0xbc, 0xc6, 0x13, 0x68, 0x4e, 0x03, 0x71, 0x4d, 0xa9, 0x09, 0x77, 0x87,
	0xfd, 0x41, 0xe5, 0xa6, 0x80, 0xbc, 0x57, 0xe9, 0xc8, 0x20, 0xce, 0xb6, 0xb8, 0xc5, 0xe2, 0x00,
	0x1a, 0x32, 0x89, 0x84, 0x5f, 0x33, 0x39, 0xfe, 0xba, 0x9c, 0x0f, 0x49, 0x24, 0xce, 0xb6, 0xb8,
	0xc1, 0xe5, 0x2a, 0x73, 0x9a, 0xab, 0xf4, 0xc6, 0xaf, 0x6f, 0x56, 0xf9, 0x68, 0x10, 0xb9, 0x4a,
	0x81, 0x1d, 0xb5, 0xa1, 0x19, 0x9a, 0x20, 0x7b, 0x01, 0xbd, 0x15, 0x33, 0x88, 0xd0, 0x48, 0x82,
	0xec, 0x9b, 0xad, 0xca, 0x7c, 0xb3, 0xcf, 0xb0, 0xbb, 0xa4, 0xbf, 0x0e, 0x84, 0x3e, 0xb4, 0x02,
	0x21, 0x52, 0xd2, 0xda, 0xd8, 0xef, 0xf0, 0xf2, 0x98, 0x47, 0xd4, 0x6c, 0x16, 0xc9, 0x98, 0x8c,
	0xcd, 0x36, 0x2f, 0x8f, 0xec, 0xd8, 0xd1, 0x2f, 0x6c, 0xe2, 0x21, 0x74, 0xe2, 0x60, 0x4e, 0x3a,
	0x09, 0x42, 0xb2, 0xfc, 0xd5, 0x05, 0xfb, 0x0a, 0x30, 0xa1, 0x8c, 0xd3, 0xf7, 0x05, 0xe9, 0x0c,
	0x5f, 0x41, 0x4b, 0x17, 0xa3, 0xb0, 0x5d, 0x46, 0xa7, 0x7e, 0x3b, 0x24, 0x5e, 0x42, 0xf0, 0x08,
	0xea, 0xa1, 0x2c, 0x7b, 0xbb, 0xe7, 0x76, 0x4a, 0x0a, 0x9e, 0x87, 0xd8, 0x10, 0xba, 0x86, 0x5d,
	0x27, 0x2a, 0xd6, 0x84, 0xcf, 0xa1, 0x91, 0x83, 0x2c, 0x77, 0xcf, 0xc9, 0xc8, 0xd7, 0x83, 0x9b,
	0x20, 0xbb, 0x02, 0xb8, 0x58, 0xdc, 0xd1, 0x51, 0x29, 0x50, 0xfb, 0x97, 0xc0, 0x31, 0x74, 0x8d,
	0x80, 0x35, 0x65, 0xab, 0xf0, 0x36, 0x57, 0x71, 0x05, 0xbb, 0xef, 0x28, 0xa2, 0x8c, 0xfe, 0x57,
	0x9b, 0x5e, 0xc3, 0xbe, 0x99, 0x5a, 0x3a, 0x0f, 0xb2, 0x3c, 0xb5, 0xb4, 0xe6, 0x43, 0x4b, 0x2f,
	0xc2, 0x30, 0xdf, 0x00, 0xaf, 0x98, 0xb3, 0x3d, 0xb2, 0xb7, 0xb0, 0x33, 0x8e, 0x94, 0xbe, 0x9b,
	0x23, 0xf6, 0xdb, 0x83, 0xee, 0xa7, 0x84, 0xe2, 0x32, 0xfb, 0x7e, 0xbc, 0xad, 0x87, 0xd0, 0x33,
	0x35, 0x9f, 0x46, 0x91, 0x35, 0x3e, 0xfc, 0x59, 0x87, 0x07, 0xe7, 0x25, 0xc9, 0x25, 0xa5, 0x3f,
	0x64, 0x48, 0x38, 0x84, 0x46, 0x5e, 0x1c, 0x1e, 0x38, 0xfc, 0x4e, 0xb5, 0xfd, 0x35, 0xad, 0xc1,
	0x53, 0xd8, 0x36, 0xdc, 0xf8, 0xd8, 0x35, 0xe5, 0x74, 0xb8, 0xff, 0x6c, 0xd5, 0xed, 0xea, 0xb0,
	0x26, 0xd0, 0x2e, 0xed, 0x61, 0x7f, 0x95, 0xa5, 0xf2, 0x7c, 0x3b, 0xd1, 0x09, 0xd4, 0x27, 0x94,
	0xe1, 0x23, 0x07, 0x57, 0x3d, 0xd1, 0xfe, 0xc1, 0xea, 0x75, 0x95, 0x75, 0xb1, 0x58, 0xce, 0xaa,
	0x9e, 0xd1, 0x52, 0x96, 0xbb, 0xfc, 0x63, 0x68, 0x16, 0xab, 0x8d, 0xee, 0xfc, 0x96, 0xb6, 0xfd,
	0x56, 0xc3, 0xa3, 0xee, 0x97, 0xea, 0x47, 0x30, 0x6d, 0x9a, 0x5f, 0xc3, 0x9b, 0x3f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x67, 0x0b, 0x51, 0x4e, 0x2d, 0x06, 0x00, 0x00,
}
